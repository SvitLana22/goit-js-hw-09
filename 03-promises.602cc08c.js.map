{"mappings":"oeAAAA,EAAA,SAEA,MAAMC,EAAUC,SAASC,cAAc,SAiBvC,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,GACFI,EAAQ,uBAAqBN,QAAiBC,OAE9CM,EAAK,sBAAoBP,QAAeC,MAAU,GACnDA,EAAM,G,CAxBbL,EAAQa,iBAAiB,UAEzB,SAAqBC,GACnBA,EAAMC,iBACN,MAAMC,EAAcC,OAAOjB,EAAQkB,OAAOC,OAC1C,IAAIC,EAAaH,OAAOjB,EAAQK,MAAMc,OACtC,MAAME,EAAYJ,OAAOjB,EAAQsB,KAAKH,OACtC,IAAK,IAAII,EAAQ,EAAGA,EAAQP,EAAYQ,OAAQD,GAAS,EAAG,CAE1DH,GAAcC,EACdlB,EAFiBoB,EAAQ,EAEDlB,OACrBoB,MAAKC,GAAWC,OAAOC,QAAQF,KAC/BG,OAAMC,GAASH,OAAOI,QAAQD,I","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formRef = document.querySelector('.form');\nformRef.addEventListener('submit', onBtnSubmit);\n\nfunction onBtnSubmit(event) {\n  event.preventDefault();\n  const amountValue = Number(formRef.amount.value);\n  let delayValue = Number(formRef.delay.value);\n  const stepValue = Number(formRef.step.value);\n  for (let index = 0; index < amountValue.length; index += 1) {\n    const position = index + 1;\n    delayValue += stepValue;\n    createPromise(position, delay)\n      .then(message => Notify.success(message))\n      .catch(error => Notify.failure(error));\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      }\n      reject(`❌ Rejected promise ${position} in ${delay}ms`);\n    }, delay);\n  });\n}\n"],"names":["parcelRequire","$47d4ff9957288465$var$formRef","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","event","preventDefault","amountValue","Number","amount","value","delayValue","stepValue","step","index","length","then","message","Notify","success","catch","error","failure"],"version":3,"file":"03-promises.602cc08c.js.map"}